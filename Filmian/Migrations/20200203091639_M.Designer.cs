// <auto-generated />
using System;
using Filmian.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Filmian.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20200203091639_M")]
    partial class M
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Filmian.Models.Director", b =>
                {
                    b.Property<short>("DirectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaNacimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 2, 3, 0, 0, 0, 0, DateTimeKind.Local));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("DirectorID");

                    b.HasIndex("PaisId");

                    b.ToTable("Directores");

                    b.HasData(
                        new
                        {
                            DirectorID = (short)1,
                            FechaNacimiento = new DateTime(1918, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Ingmar Bergman",
                            PaisId = 67
                        },
                        new
                        {
                            DirectorID = (short)2,
                            FechaNacimiento = new DateTime(1956, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Lars von Trier",
                            PaisId = 22
                        },
                        new
                        {
                            DirectorID = (short)3,
                            FechaNacimiento = new DateTime(1932, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Andréi Tarkovski",
                            PaisId = 50
                        });
                });

            modelBuilder.Entity("Filmian.Models.Pais", b =>
                {
                    b.Property<int>("PaisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PaisId");

                    b.HasIndex("Nombre");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("Filmian.Models.Pelicula", b =>
                {
                    b.Property<short>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("DirectorId")
                        .HasColumnType("smallint");

                    b.Property<short>("Duracion")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaId");

                    b.HasIndex("DirectorId");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            PeliculaId = (short)1,
                            DirectorId = (short)1,
                            Duracion = (short)96,
                            Titulo = "El séptimo sello"
                        },
                        new
                        {
                            PeliculaId = (short)2,
                            DirectorId = (short)1,
                            Duracion = (short)85,
                            Titulo = "Persona"
                        },
                        new
                        {
                            PeliculaId = (short)3,
                            DirectorId = (short)1,
                            Duracion = (short)106,
                            Titulo = "Gritos y susurros"
                        },
                        new
                        {
                            PeliculaId = (short)4,
                            DirectorId = (short)2,
                            Duracion = (short)136,
                            Titulo = "Melancolía"
                        },
                        new
                        {
                            PeliculaId = (short)5,
                            DirectorId = (short)2,
                            Duracion = (short)179,
                            Titulo = "Dogville"
                        },
                        new
                        {
                            PeliculaId = (short)6,
                            DirectorId = (short)2,
                            Duracion = (short)117,
                            Titulo = "Los idiotas"
                        },
                        new
                        {
                            PeliculaId = (short)7,
                            DirectorId = (short)3,
                            Duracion = (short)163,
                            Titulo = "Stalker"
                        },
                        new
                        {
                            PeliculaId = (short)8,
                            DirectorId = (short)3,
                            Duracion = (short)169,
                            Titulo = "Solaris"
                        });
                });

            modelBuilder.Entity("Filmian.Models.Director", b =>
                {
                    b.HasOne("Filmian.Models.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Filmian.Models.Pelicula", b =>
                {
                    b.HasOne("Filmian.Models.Director", "Director")
                        .WithMany("Peliculas")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
